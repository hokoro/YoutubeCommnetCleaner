"""
Django settings for capstonproject project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# 프로젝트 최상위 경로

env_list = dict()
local_env = open(os.path.join(BASE_DIR, "env"))
# 최상위 폴더에서 env라는 파일로 알아서 찾아가라

while True:
    line = local_env.readline()  # env 파일에서 한줄씩 읽어오고
    if not line:  # line 이 끝나면 종료
        break
    start = line.find('=')  # '=' 처음 나오는 문자의 인덱스 찾기
    key = line[:start]  # = 이전에는 key
    value = line[start + 1:]  # = 이후에는 value
    env_list[key] = value  # dict 로 만들기

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = env_list['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of 'allauth'
    'django.contrib.auth.backends.ModelBackend',

    # 'allauth' specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1
LOGIN_REDIRECT_URL = '/'

GOOGLE_CLIENT_ID = "919293006995-pc8bb63h8of0ovm6g215gta6v2c6vpe7.apps.googleusercontent.com"
GOOGLE_REDIRECT_URL = "http://127.0.0.1:8000/api/code"
GOOGLE_REDIRECT_URL_ENCODING = "http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Fcode"
GOOGLE_SECRET_KEY = "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"
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'capstonapp',  # 추가하면 여기다가 추가해야함
    'bootstrap4',
    'analysisapp',
    'apiapp',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'capstonproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'capstonproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
# css 자바스크립트가 들어감
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # basedir 로 가서 staticfiles 라는 폴더를 정적 루트로 사용한다.

STATICFILES_DIRS = [
    BASE_DIR / "static",
    # 프로 젝트 폴더에서 static 폴더를 찾아서 전체 프로젝트 에 적용하여 인식한다.
    # static 이라는 css 정적 파일을 찾기 위해서

]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

MEDIA_URL = '/media/'  # static 관련 url 이 들어왔을떄 경로를 설정한다.

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # profile app 부터는 이미지를 업로드 받기 때문에 지정해줘야 한다

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
